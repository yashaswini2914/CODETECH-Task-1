
def password_strength_checker(password):
    # Initialize strength parameters
    length_criteria = len(password) >= 8
    uppercase_criteria = re.search(r'[A-Z]', password) is not None
    lowercase_criteria = re.search(r'[a-z]', password) is not None
    number_criteria = re.search(r'[0-9]', password) is not None
    special_char_criteria = re.search(r'[!@#$%^&*(),.?":{}|<>]', password) is not None

    # Calculate score based on the criteria
    score = sum([length_criteria, uppercase_criteria, lowercase_criteria, number_criteria, special_char_criteria])

    # Determine strength
    if score == 5:
        strength = "Very Strong"
    elif score == 4:
        strength = "Strong"
    elif score == 3:
        strength = "Moderate"
    elif score == 2:
        strength = "Weak"
    else:
        strength = "Very Weak"

    # Feedback for improvement
    feedback = []
    if not length_criteria:
        feedback.append("Your password should be at least 8 characters long.")
    if not uppercase_criteria:
        feedback.append("Your password should include at least one uppercase letter.")
    if not lowercase_criteria:
        feedback.append("Your password should include at least one lowercase letter.")
    if not number_criteria:
        feedback.append("Your password should include at least one number.")
    if not special_char_criteria:
        feedback.append("Your password should include at least one special character.")

    return strength, feedback


# Example usage:
password = input("Enter a password to check its strength: ")
strength, feedback = password_strength_checker(password)
print(f"Password Strength: {strength}")
if feedback:
    print("Suggestions for improvement:")
    for tip in feedback:
        print(f"- {tip}")
